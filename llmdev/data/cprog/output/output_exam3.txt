Question: 1. Which of the following statements about arrays in C is true? a) Arrays are dynamically allocated b) The name of the array points to the first element c) The size of an array can be changed after its declaration d) Arrays can be passed to functions by value
Search Query: C arrays

Question: 2. What is the output of the following code?  c Copy code #include <stdio.h> int main() { int a = 5; if (a = 0) printf("True"); else printf("False"); return 0; } a) True b) False c) Compiler error d) Undefined behavior
Search Query: C programming syntax errors

Question: 3. Which of the following is true about pointers in C? a) A pointer can point to another pointer b) A pointer must be initialized before being used c) A pointer stores the address of a variable d) All of the above
Search Query: pointers in c

Question: 4. What is the output of the following code?  c Copy code #include <stdio.h> int main() { int arr[] = {1, 2, 3}; printf("%d\n", 2[arr]); return 0; } a) 1 b) 2 c) 3 d) Undefined behavior
Search Query: C programming syntax undefined behavior

Question: 5. What is the size of an empty structure in C? a) 0 bytes b) 1 byte c) Undefined d) Compiler error
Search Query: C programming struct size

Question: 6. What will happen if the following code is executed?  c Copy code #include <stdio.h> int main() { int arr[5] = {0}; printf("%d\n", arr[10]); return 0; } a) 0 b) Undefined behavior c) Compiler error d) Segmentation fault
Search Query: undefined behavior in c programming

Question: 7. Which of the following operators in C is used to get the address of a variable? a) & b) * c) [] d) ->
Search Query: C programming language syntax

Question: 8. Which of the following correctly declares a pointer to a function that returns an integer and takes two integers as arguments? a) int *func(int, int); b) int (*func)(int, int); c) int func*(int, int); d) int func(int*, int*);
Search Query: function pointers in c

Question: 9. What is the value of the following expression?  c Copy code int a = 3, b = 2, c; c = a > b ? a - b : b - a; a) 1 b) 2 c) 3 d) 0  10. What will be the output of the following code?  c Copy code #include <stdio.h> int main() { char str[] = "abc"; printf("%c\n", str[3]); return 0; } a) a b) c c) \0 d) Undefined behavior  11. What will be the output of the following code?  c Copy code #include <stdio.h> int main() { printf("%d\n", sizeof(5.0)); return 0; } a) 2 b) 4 c) 8 d) Undefined  12. Which of the following functions is used to allocate memory dynamically in C? a) malloc() b) calloc() c) realloc() d) All of the above  13. What is the output of the following code?  c Copy code #include <stdio.h> #define MULTIPLY(a, b) a * b int main() { int x = 5; printf("%d\n", MULTIPLY(x + 1, x + 2)); return 0; } a) 11 b) 18 c) 15 d) Undefined behavior  14. What is the purpose of the #include preprocessor directive? a) To include other files in the program b) To define constants c) To allocate memory dynamically d) To handle exceptions  15. What is the correct way to check for successful memory allocation in C? a) if (ptr == NULL) b) if (!ptr) c) if (ptr) d) Both a and b  16. What is the output of the following code?  c Copy code #include <stdio.h> int main() { int x = 5; int *p = &x; *p = 10; printf("%d\n", x); return 0; } a) 5 b) 10 c) Compiler error d) Undefined behavior  17. Which of the following statements about the fread() function is true? a) It reads data from a file b) It writes data to a file c) It closes a file d) It sets the file position indicator  18. Which of the following statements about the void data type in C is true? a) It cannot be used as a return type b) It can be used to declare a function that takes no arguments c) It can be dereferenced d) It can store data of any type  19. What is the result of the following expression?  c Copy code int a = 5, b = 10; a ^= b ^= a ^= b; a) a = 10, b = 5 b) a = 5, b = 10 c) a = 0, b = 0 d) Undefined behavior  20. What is the output of the following code?  c Copy code #include <stdio.h> int main() { int a = 5, b = 10; printf("%d\n", a > b ? a++ : --b); return 0; } a) 5 b) 9 c) 10 d) 11  21. What is the purpose of the #ifndef directive in C? a) To define constants b) To include a file c) To check if a macro is not defined d) To allocate memory dynamically  22. Which of the following describes a const variable in C? a) It cannot be modified after initialization b) It must be initialized during declaration c) Its address can be changed d) Both a and b  23. Which of the following correctly defines a macro to calculate the cube of a number in C? a) #define CUBE(x) x*x*x b) #define CUBE(x) (x*x*x) c) #define CUBE(x) (x)*(x)*(x) d) #define CUBE(x) ((x)*(x)*(x))  24. What is the result of the following code?  c Copy code #include <stdio.h> int main() { int arr[] = {1, 2, 3, 4}; printf("%d\n", arr[4]); return 0; } a) 1 b) 4 c) Undefined behavior d) Compiler error  25. What is the output of the following code?  c Copy code #include <stdio.h> int main() { int i = 5; i = i++; printf("%d\n", i); return 0; } a) 5 b) 6 c) 0 d) Undefined behavior  26. Which of the following is NOT a valid format specifier in C? a) %d b) %lf c) %Lf d) %lfd  27. What will be the output of the following code?  c Copy code #include <stdio.h> int main() { int arr[] = {10, 20, 30}; int *ptr = arr; printf("%d\n", *(ptr + 1)); return 0; } a) 10 b) 20 c) 30 d) Compiler error  28. What will be the output of the following code?  c Copy code #include <stdio.h> int main() { printf("%d\n", 10/0); return 0; } a) 0 b) Undefined behavior c) Infinity d) Compiler error  29. Which of the following functions is used to compare two strings in C? a) strcat() b) strcmp() c) strcpy() d) strlen()  30. What is the correct way to allocate memory for an array of 10 integers in C? a) int *arr = malloc(10); b) int *arr = malloc(10 * sizeof(int)); c) int *arr = malloc(sizeof(10)); d) int *arr = malloc(10 * int);  31. What is the purpose of the return statement in C? a) To terminate a program b) To return a value from a function c) To jump to the start of the program d) To end a loop  32. Which of the following describes the register storage class specifier? a) The variable is stored in CPU registers b) The variable has global scope c) The variable is stored in heap memory d) The variable is initialized to zero  33. What is the value of the variable x after the following code executes?  c Copy code int x = 5; x += 3 * 2; a) 11 b) 16 c) 10 d) 8  34. Which of the following functions writes formatted output to a string in C? a) sprintf() b) printf() c) fprintf() d) fputs()  35. What is the result of the following code?  c Copy code #include <stdio.h> int main() { int a = 5; printf("%d\n", ++a + a++); return 0; } a) 11 b) 12 c) 13 d) Undefined behavior  36. What is the size of a pointer to an int on a 64-bit system? a) 4 bytes b) 8 bytes c) 16 bytes d) Depends on the system  37. What is the correct syntax for a function that takes a pointer to an integer as an argument and returns nothing? a) void func(int *ptr); b) int func(void *ptr); c) void func(*int ptr); d) int func(void);  38. What is the correct way to declare a multidimensional array in C? a) int arr[2, 3]; b) int arr[2][3]; c) int arr(2)(3); d) int arr{2}{3};  39. What will be the output of the following code?  c Copy code #include <stdio.h> int main() { int a = 5; int b = (a == 5) ? 10 : 20; printf("%d\n", b); return 0; } a) 5 b) 10 c) 20 d) Undefined behavior  40. Which of the following functions terminates the program execution in C? a) exit() b) break() c) continue() d) goto()  41. What is the output of the following code?  c Copy code #include <stdio.h> int main() { char c = 'A'; printf("%d\n", c); return 0; } a) A b) 65 c) 97 d) Undefined behavior  42. What is the result of the following expression?  c Copy code int a = 2, b = 3; int c = a & b; a) 1 b) 0 c) 2 d) 3  43. Which of the following functions sets all memory in a block to a specified value? a) memcpy() b) memset() c) strncpy() d) memmove()  44. What is the correct way to free memory allocated dynamically with malloc()? a) delete(ptr); b) free(ptr); c) dealloc(ptr); d) release(ptr);  45. What will be the output of the following code?  c Copy code #include <stdio.h> int main() { int i = 5; printf("%d\n", i == 5); return 0; } a) 0 b) 1 c) 5 d) Compiler error  46. Which of the following functions is used to open a file in C? a) fread() b) fwrite() c) fopen() d) fclose()  47. What is the result of the following expression?  c Copy code int a = 5; int b = ++a * 2; a) b = 10 b) b = 11 c) b = 12 d) b = 14  48. Which of the following is true about the switch statement in C? a) It can only evaluate integer expressions b) It can evaluate both integer and floating-point expressions c) It allows multiple cases to be executed sequentially without break statements d) It terminates the program if no case is matched  49. What will be the output of the following code?  c Copy code #include <stdio.h> int main() { int a = 5; int b = a << 1; printf("%d\n", b); return 0; } a) 2 b) 5 c) 10 d) 1  50. What does the sizeof() operator return in C? a) The size of a variable in bits b) The size of a variable in bytes c) The size of a variable in kilobytes d) The length of a string
Search Query: Let's break down these C programming questions:

**1. Class Specifier**

* **The correct answer is (b) The variable has global scope.** 

   *  In C, the `class` keyword is not used. You might be thinking of other programming languages like Java or Python where "class" defines a blueprint for objects. In C, variables declared outside any function have *global scope*. This means they can be accessed from anywhere within the program.

**2. Variable Value**

* **The correct answer is (a) 11.**

   * Here's how it works:
      * `int x = 5;`: Initializes a variable named 'x' with the value 5.
      * `x += 3 * 2;`:  This means "add the result of (3 * 2) to the current value of x". So, `x` becomes `5 + 6 = 11`.

**3. Formatted String Output**

* **The correct answer is (a) sprintf()**.

   * `sprintf()` writes formatted output to a *string* buffer, rather than directly to the console like `printf()`.


**4. Post-Increment and Pre-Increment**

* **The correct answer is (b) 12.**

   * This code demonstrates post-increment (`++a` after the variable is used) and pre-increment (`a++` before the variable is used).
     * `printf("%d\n", ++a + a++);`
      1.  `++a`: Increments 'a' to 6 *before* it's added to anything.
      2. `a++`: Increments 'a' to 7 *after* it's been used in the addition.
      3. The expression evaluates to: `6 + 7 = 13`



**5. Pointer Size**

* **The correct answer is (b) 8 bytes**.

   * On a 64-bit system, pointers typically store memory addresses which are represented using 64 bits. This translates to 8 bytes.


**6. Function with Integer Pointer Argument**

* **The correct answer is (a) void func(int *ptr);**

   * `void`: Indicates the function returns nothing.
   * `func`: The function name.
   * `int *ptr`:  Declares a parameter named 'ptr' which is a pointer to an integer (`int`).



**7. Multidimensional Array Declaration**

* **The correct answer is (b) int arr[2][3];**

   * This declares a 2-dimensional array named 'arr'. It has 2 rows and 3 columns.

**8. Ternary Operator**

* **The correct answer is (b) 10.**

   * The ternary operator `? :`  works like a concise if-else statement:
      * `(a == 5) ? 10 : 20;`: If 'a' is equal to 5, the expression evaluates to 10. Otherwise, it evaluates to 20.



**9. Program Termination**

* **The correct answer is (a) exit()**.

   *  `exit()` immediately terminates the program and returns a status code to the operating system.

**10. Character ASCII Value**

* **The correct answer is (b) 65.**

   * In C, characters are represented by their corresponding ASCII (American Standard Code for Information Interchange) values. The character 'A' has an ASCII value of 65.


**11. Bitwise AND Operator**

* **The correct answer is (a) 2**.

   * `&` performs a bitwise AND operation on the binary representations of the operands.



**12. Memory Allocation with Dynamic Memory**

* **The correct answer is (b) free(ptr);**

   * When you allocate memory dynamically using `malloc()`, it's essential to release that memory when you're done with it using `free()` to prevent memory leaks.



**13. Comparison Operator and Boolean Output**

* **The correct answer is (b) 1**.

   *  `i == 5`: This comparison returns a boolean value (`true` or `false`). The expression evaluates to `true`, which in integer form represents 1.


**14. File Opening**

* **The correct answer is (c) fopen()**.

   * `fopen()` opens a file and returns a file pointer, which you need to use for reading from or writing to the file.



**15. Pre-Increment vs Post-Increment**

* **The correct answer is (b) b = 11.**


Let me know if you have any more C programming questions!

